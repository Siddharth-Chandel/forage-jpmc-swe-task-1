From 2a8c125936a4a2299f4f205f6270043f4c2cccbf Mon Sep 17 00:00:00 2001
From: Siddharth Chandel <siddharthchandel20004@gmail.com>
Date: Thu, 25 Jul 2024 23:56:48 +0530
Subject: [PATCH] Submission

---
 client3.py     | 10 +++++++---
 client_test.py | 29 ++++++++++++++++++++++++++++-
 2 files changed, 35 insertions(+), 4 deletions(-)

diff --git a/client3.py b/client3.py
index 3fc09b7..a2565e0 100644
--- a/client3.py
+++ b/client3.py
@@ -35,14 +35,16 @@ def getDataPoint(quote):
     stock = quote['stock']
     bid_price = float(quote['top_bid']['price'])
     ask_price = float(quote['top_ask']['price'])
-    price = bid_price
+    price = (bid_price+ask_price)/2
     return stock, bid_price, ask_price, price
 
 
 def getRatio(price_a, price_b):
     """ Get ratio of price_a and price_b """
     """ ------------- Update this function ------------- """
-    return 1
+    if price_b != 0:
+        return price_a/price_b
+    return
 
 
 # Main
@@ -52,8 +54,10 @@ if __name__ == "__main__":
         quotes = json.loads(urllib.request.urlopen(QUERY.format(random.random())).read())
 
         """ ----------- Update to get the ratio --------------- """
+        prices = {}
         for quote in quotes:
             stock, bid_price, ask_price, price = getDataPoint(quote)
+            prices[stock]=price
             print("Quoted %s at (bid:%s, ask:%s, price:%s)" % (stock, bid_price, ask_price, price))
 
-        print("Ratio %s" % getRatio(price, price))
+        print("Ratio %s" % getRatio(prices["ABC"], prices["DEF"]))
diff --git a/client_test.py b/client_test.py
index af2bf26..fed02a7 100644
--- a/client_test.py
+++ b/client_test.py
@@ -1,5 +1,5 @@
 import unittest
-from client3 import getDataPoint
+from client3 import getDataPoint, getRatio
 
 class ClientTest(unittest.TestCase):
   def test_getDataPoint_calculatePrice(self):
@@ -8,6 +8,10 @@ class ClientTest(unittest.TestCase):
       {'top_ask': {'price': 121.68, 'size': 4}, 'timestamp': '2019-02-11 22:06:30.572453', 'top_bid': {'price': 117.87, 'size': 81}, 'id': '0.109974697771', 'stock': 'DEF'}
     ]
     """ ------------ Add the assertion below ------------ """
+    for quote in quotes:
+      data = getDataPoint(quote)
+      self.assertIsNotNone(data)
+      print(f"Stock: {data[0]}, Price: {data[3]}")
 
   def test_getDataPoint_calculatePriceBidGreaterThanAsk(self):
     quotes = [
@@ -15,9 +19,32 @@ class ClientTest(unittest.TestCase):
       {'top_ask': {'price': 121.68, 'size': 4}, 'timestamp': '2019-02-11 22:06:30.572453', 'top_bid': {'price': 117.87, 'size': 81}, 'id': '0.109974697771', 'stock': 'DEF'}
     ]
     """ ------------ Add the assertion below ------------ """
+    for quote in quotes:
+      data = getDataPoint(quote)
+      self.assertIsNotNone(data)
+      stock, bid, ask, price = data
+      print(f"Stock: {stock}")
+      self.assertGreater(bid, ask)
+      self.assertGreater(price, ask)
+      print("Bid and price is greater than ask")
 
 
   """ ------------ Add more unit tests ------------ """
+  def test_getDataPoint_calculatePriceAGreaterThanEqualToPriceB(self):
+    quotes = [
+      {'top_ask': {'price': 119.2, 'size': 36}, 'timestamp': '2019-02-11 22:06:30.572453', 'top_bid': {'price': 120.48, 'size': 109}, 'id': '0.109974697771', 'stock': 'ABC'},
+      {'top_ask': {'price': 121.68, 'size': 4}, 'timestamp': '2019-02-11 22:06:30.572453', 'top_bid': {'price': 117.87, 'size': 81}, 'id': '0.109974697771', 'stock': 'DEF'}
+    ]
+
+    """ ------------ Add the assertion below ------------ """
+    for quote in range(len(quotes)-1):
+      dataA = getDataPoint(quotes[quote])
+      stockA, priceA = dataA[0], dataA[3]
+      dataB = getDataPoint(quotes[quote+1])
+      stockB, priceB = dataB[0], dataB[3]
+      self.assertGreaterEqual(getRatio(priceA, priceB),1)
+      print(f"{stockA}'s price is greater than and equal to {stockB}'s price")
+
 
 
 
-- 
2.39.0.windows.2

